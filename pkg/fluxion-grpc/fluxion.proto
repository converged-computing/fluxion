syntax = "proto3";

option go_package = "github.com/converged-computing/fluxion/pkg/fluxion-grpc";

package fluxion;

// Service definition for Fluxclient
service FluxcliService {
    // Sends a Match command
    rpc Match(MatchRequest) returns (MatchResponse) {}
    rpc Cancel(CancelRequest) returns (CancelResponse) {}
    rpc Init(InitRequest) returns (InitResponse) {}
}

message InitRequest {
    string policy = 1;
    string jgf = 2;
}

message InitResponse {
  enum ResultType {
    INIT_SUCCESS = 0;
    INIT_ERROR = 1;
    INIT_DENIED = 2;
  }
  ResultType status = 1;
}

// The Match request message (allocate, allocate_orelse_reserve)
message MatchRequest {
    string jobspec = 1;
    string request = 2;
    int32 count = 3;
}

// The Match response message
message MatchResponse {
    string allocation = 1;
    int64 jobid = 2;
    bool reserved = 3;
    int64 at = 4;
    float overhead = 5;
    enum ResultType {
        MATCH_SUCCESS = 0;
        MATCH_ERROR = 1;
        MATCH_DENIED = 2;
    }
    ResultType status = 6;    
}

message CancelRequest {
    int64 jobID = 2;
}

// The Match response message
message CancelResponse {
    int64 jobID = 1;
    int32 error = 2;

    enum ResultType {
        CANCEL_SUCCESS = 0;
        CANCEL_REQUEST_ERROR = 1;
        CANCEL_ERROR = 2;
        CANCEL_DENIED = 3;
    }
    ResultType status = 3; 
}


